{
  "dialog": {
    "prefix": "lyDialog",
    "body": [
      "<div class=\"tp-dialog-header__line\"></div>",
      "<h1 mat-dialog-title>",
      "<!-- title -->",
      "</h1>",
      "<mat-dialog-content>",
      "<!-- content -->",
      "</mat-dialog-content>",
      "<mat-dialog-actions>",
      "  <div class=\"gl-fill-remaining-space\"></div>",
      "  <button type=\"button\" mat-button>CANCEL</button>",
      "  <button",
      "    mat-raised-button",
      "    color=\"primary\"",
      "  >",
      "    SUBMIT",
      "  </button>",
      "</mat-dialog-actions>",
      ""
    ],
    "description": "dialog"
  },
  "password": {
    "prefix": "lyPassword",
    "body": [
      "<mat-form-field tpFormFieldHint floatLabel=\"always\" hideRequiredMarker=\"false\" class=\"password-field\">",
      "  <mat-label>Password</mat-label>",
      "  <input",
      "    matInput",
      "    [type]=\"passwordHide ? 'password' : 'text'\"",
      "    [formControl]=\"password\"",
      "    maxlength=\"63\"",
      "  />",
      "  <button",
      "    mat-icon-button",
      "    matSuffix",
      "    (click)=\"passwordHide = !passwordHide\"",
      "    [attr.aria-label]=\"'Hide password'\"",
      "    [attr.aria-pressed]=\"passwordHide\"",
      "    type=\"button\" ",
      "  >",
      "    <mat-icon",
      "      [svgIcon]=\"passwordHide ? 'icon:visibility_off' : 'icon:visibility'\"",
      "    ></mat-icon>",
      "  </button>",
      "  <mat-hint>Allow 8 ~ 63 characters</mat-hint>",
      "  <mat-error *ngIf=\"password.hasError('required')\">Value is required</mat-error>",
      "  <mat-error",
      "    *ngIf=\"password.hasError('minlength') || password.hasError('maxlength')\"",
      "    >Allow 8 ~ 63 characters</mat-error",
      "  >",
      "</mat-form-field>",
      ""
    ],
    "description": "password"
  },
  "input-number": {
    "prefix": "lyInputNumber",
    "body": [
      "<mat-form-field tpFormFieldHint floatLabel=\"always\" hideRequiredMarker=\"false\">",
      "  <mat-label>Port</mat-label>",
      "  <input",
      "    type=\"number\"",
      "    matInput",
      "    placeholder=\"8883\"",
      "    formControlName=\"fnc\"",
      "    maxlength=\"6\"",
      "  />",
      "  <mat-hint>Number: 1 ~ 65535</mat-hint>",
      "  <mat-error *ngIf=\"fnc.hasError('required')\">Value is required</mat-error>",
      "  <mat-error *ngIf=\"fnc.hasError('max') || fnc.hasError('min')\"",
      "    >The number must between 1 and 65535.</mat-error",
      "  >",
      "</mat-form-field>"
    ],
    "description": "input-number"
  },
  "input-text": {
    "prefix": "lyInputText",
    "body": [
      "<mat-form-field",
      "  tpFormFieldHint",
      "  floatLabel=\"always\"",
      "  hideRequiredMarker=\"false\"",
      "  class=\"full-width-field\"",
      ">",
      "  <mat-label>Username - optional</mat-label>",
      "  <input type=\"text\" matInput formControlName=\"userName\" maxlength=\"255\" />",
      "  <mat-hint align=\"end\">{{ userName.value.length }} / 225</mat-hint>",
      "</mat-form-field>"
    ],
    "description": "input-text"
  },
  "textarea": {
    "prefix": "lyTextarea",
    "body": [
      "<mat-form-field class=\"input-field\" floatLabel=\"always\">",
      "  <mat-label>",
      "    <!-- Title -->",
      "  </mat-label>",
      "  <textarea",
      "    matInput",
      "    formControlName=\"formControlName\"",
      "    maxlength=\"255\"",
      "  ></textarea>",
      "  <mat-hint align=\"end\">{{ formControlName.value.length }} / 225</mat-hint>",
      "  <mat-error *ngIf=\"formControlName.hasError('required')\"",
      "    >Value is required</mat-error",
      "  >",
      "</mat-form-field>"
    ],
    "description": "textarea"
  },
  "fieldset": {
    "prefix": "lyFieldset",
    "body": [
      "<fieldset class=\"gl-fieldset\">",
      "  <legend>",
      "  <!-- Title -->",
      "  </legend>",
      "  <div>",
      "  <!-- content -->",
      "  </div>",
      "</fieldset>"
    ],
    "description": "fieldset"
  },
  "pageWrapper": {
    "prefix": "lyPageWrapper",
    "body": [
      "<div class=\"page-content-wrapper\">",
      "  <h5 class=\"page-header gl-h5\">",
      "    <!-- Title -->",
      "  </h5>",
      "  <tp-breadcrumb tpTheme></tp-breadcrumb>",
      "</div>",
      ""
    ],
    "description": "pageWrapper"
  },
  "tabs": {
    "prefix": "lyTabs",
    "body": [
      "<mat-tab-group animationDuration=\"0ms\">",
      "  <mat-tab label=\"tab1\">",
      "    <!-- tab1 content -->",
      "  </mat-tab>",
      "  <mat-tab label=\"tab2\">",
      "    <ng-template matTabContent>",
      "      <!-- tab2 content for lazyloading -->",
      "    </ng-template>",
      "  </mat-tab>",
      "</mat-tab-group>"
    ],
    "description": "tabs"
  },
  "tpProgressSpinner": {
    "prefix": "lyTpProgressSpinner",
    "body": [
      "<tp-progress-spinner [isLoading]=\"isLoading\">",
      "  <div tp-progress-spinner-content>",
      "    <!-- content in the spinner -->",
      "  </div>",
      "</tp-progress-spinner>",
      ""
    ],
    "description": "tpProgressSpinner"
  },
  "slideToggleWithButton": {
    "prefix": "lySlideToggleWithButton",
    "body": [
      "<div class=\"slide-toggle-with-button\">",
      "  <mat-slide-toggle color=\"primary\">",
      "    <!-- toggle text  -->",
      "  </mat-slide-toggle>",
      "  <div>",
      "    <button mat-icon-button class=\"medium-size\">",
      "      <mat-icon",
      "        svgIcon=\"icon:settings_applications\"",
      "        matTooltip=\"tooltip text\"",
      "      ></mat-icon>",
      "    </button>",
      "  </div>",
      "</div>"
    ],
    "description": "slideToggleWithButton"
  },
  "radioGroupHorizontal": {
    "prefix": "lyRadioGroupHorizontal",
    "body": [
      "<section class=\"gl-radio-group-horizontal\">",
      "  <mat-label class=\"gl-caption\">",
      "    <!-- title -->",
      "  </mat-label>",
      "  <mat-radio-group formControlName=\"formcontrolName\">",
      "    <mat-radio-button value=\"1\" color=\"primary\">",
      "      <!-- radio 1  -->",
      "    </mat-radio-button>",
      "    <mat-radio-button value=\"2\" color=\"primary\">",
      "      <!-- radio 2  -->",
      "    </mat-radio-button>",
      "  </mat-radio-group>",
      "</section>"
    ],
    "description": "radioGroupHorizontal"
  },
  "radioGroupVertical": {
    "prefix": "lyRadioGroupVertical",
    "body": [
      "<section class=\"gl-radio-group-vertical\">",
      "  <mat-label class=\"gl-caption\">",
      "    <!-- title -->",
      "  </mat-label>",
      "  <mat-radio-group formControlName=\"formcontrolName\">",
      "    <mat-radio-button value=\"1\" color=\"primary\">",
      "      <!-- radio 1  -->",
      "    </mat-radio-button>",
      "    <p class=\"radio-hint\">",
      "      <!-- hint of radio option -->",
      "    </p>",
      "    <mat-radio-button value=\"2\" color=\"primary\">",
      "      <!-- radio 2  -->",
      "    </mat-radio-button>",
      "  </mat-radio-group>",
      "</section>",
      ""
    ],
    "description": "radioGroupVertical"
  },
  "checkboxGroupHorizontal": {
    "prefix": "lyCheckboxGroupHorizontal",
    "body": [
      "<section class=\"gl-checkbox-group-horizontal\">",
      "  <mat-label class=\"gl-caption\">",
      "    <!-- title -->",
      "  </mat-label>",
      "  <mat-checkbox color=\"primary\">",
      "    <!-- checkbox 1 -->",
      "  </mat-checkbox>",
      "  <mat-checkbox color=\"primary\">",
      "    <!-- checkbox 2 -->",
      "  </mat-checkbox>",
      "</section>",
      ""
    ],
    "description": "checkboxGroupHorizontal"
  },
  "checkboxGroupVertical": {
    "prefix": "lyCheckboxGroupVertical",
    "body": [
      "<section class=\"gl-checkbox-group-vertical\">",
      "  <mat-label class=\"gl-caption\">",
      "    <!-- title -->",
      "  </mat-label>",
      "  <mat-checkbox color=\"primary\">",
      "    <!-- checkbox 1 -->",
      "  </mat-checkbox>",
      "  <p class=\"checkbox-hint\">",
      "    <!-- hint of checkbox 1 -->",
      "  </p>",
      "  <mat-checkbox color=\"primary\">",
      "    <!-- checkbox 2 -->",
      "  </mat-checkbox>",
      "</section>"
    ],
    "description": "checkboxGroupVertical"
  },
  "stepperHorizontalInDialog": {
    "prefix": "lyStepperHorizontalInDialog",
    "body": [
      "<form [formGroup]=\"form\">",
      "  <mat-horizontal-stepper class=\"tp-stepper\" [linear]=\"true\" #stepper>",
      "    <ng-template matStepperIcon=\"edit\">",
      "      <mat-icon svgIcon=\"icon:done\"></mat-icon>",
      "    </ng-template>",
      "",
      "    <mat-step class=\"tp-stepper__step\" [stepControl]=\"stepControl1\">",
      "      <ng-template class=\"tp-stepper__step__label\" matStepLabel>",
      "        <!-- step1 title -->",
      "      </ng-template>",
      "      <mat-dialog-content class=\"tp-stepper__step__content\">",
      "        <!-- step1 content -->",
      "      </mat-dialog-content>",
      "      <mat-dialog-actions class=\"tp-stepper__step__btns\">",
      "        <div class=\"gl-fill-remaining-space\"></div>",
      "        <div class=\"tp-stepper__step__btns__right\">",
      "          <button mat-button [mat-dialog-close]=\"false\">CANCEL</button>",
      "          <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">",
      "            NEXT",
      "            <mat-icon svgIcon=\"icon:navigate_next\"></mat-icon>",
      "          </button>",
      "        </div>",
      "      </mat-dialog-actions>",
      "    </mat-step>",
      "",
      "    <mat-step class=\"tp-stepper__step\" [stepControl]=\"stepControl2\">",
      "      <ng-template class=\"tp-stepper__step__label\" matStepLabel>",
      "        <!-- Step2 title -->",
      "      </ng-template>",
      "      <mat-dialog-content class=\"tp-stepper__step__content\">",
      "        <!-- Step2 Content -->",
      "      </mat-dialog-content>",
      "      <mat-dialog-actions class=\"tp-stepper__step__btns\">",
      "        <div class=\"tp-stepper__step__btns__left\">",
      "          <button mat-button matStepperPrevious>",
      "            <mat-icon svgIcon=\"icon:keyboard_arrow_left\"></mat-icon>BACK",
      "          </button>",
      "        </div>",
      "        <div class=\"gl-fill-remaining-space\"></div>",
      "        <div class=\"tp-stepper__step__btns__right\">",
      "          <button mat-button [mat-dialog-close]=\"false\">CANCEL</button>",
      "          <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">",
      "            NEXT",
      "            <mat-icon svgIcon=\"icon:navigate_next\"></mat-icon>",
      "          </button>",
      "        </div>",
      "      </mat-dialog-actions>",
      "    </mat-step>",
      "",
      "    <mat-step class=\"tp-stepper__step\" [stepControl]=\"stepControl3\">",
      "      <ng-template class=\"tp-stepper__step__label\" matStepLabel>",
      "        <!-- Step3 Title -->",
      "      </ng-template>",
      "      <mat-dialog-content class=\"tp-stepper__step__content\">",
      "        <!-- Step3 content -->",
      "      </mat-dialog-content>",
      "      <mat-dialog-actions class=\"tp-stepper__step__btns\">",
      "        <div class=\"tp-stepper__step__btns__left\">",
      "          <button mat-button matStepperPrevious>",
      "            <mat-icon svgIcon=\"icon:keyboard_arrow_left\"></mat-icon>BACK",
      "          </button>",
      "        </div>",
      "        <div class=\"gl-fill-remaining-space\"></div>",
      "        <div class=\"tp-stepper__step__btns__right\">",
      "          <button mat-button [mat-dialog-close]=\"false\">",
      "            CANCEL",
      "          </button>",
      "          <button mat-raised-button color=\"primary\">",
      "            SUBMIT",
      "          </button>",
      "        </div>",
      "      </mat-dialog-actions>",
      "    </mat-step>",
      "  </mat-horizontal-stepper>",
      "</form>"
    ],
    "description": "stepperHorizontalInDialog"
  },
  "stepperHorizontal": {
    "prefix": "lyStepperHorizontal",
    "body": [
      "<form [formGroup]=\"form\">",
      "  <mat-horizontal-stepper class=\"tp-stepper\" [linear]=\"true\" #stepper>",
      "    <ng-template matStepperIcon=\"edit\">",
      "      <mat-icon svgIcon=\"icon:done\"></mat-icon>",
      "    </ng-template>",
      "",
      "    <mat-step class=\"tp-stepper__step\" [stepControl]=\"stepControl1\">",
      "      <ng-template class=\"tp-stepper__step__label\" matStepLabel>",
      "        <!-- step1 title -->",
      "      </ng-template>",
      "      <div class=\"tp-stepper__step__content\">",
      "        <!-- step1 content -->",
      "      </div>",
      "      <div class=\"tp-stepper__step__btns\">",
      "        <div class=\"gl-fill-remaining-space\"></div>",
      "        <div class=\"tp-stepper__step__btns__right\">",
      "          <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">",
      "            NEXT",
      "            <mat-icon svgIcon=\"icon:navigate_next\"></mat-icon>",
      "          </button>",
      "        </div>",
      "      </div>",
      "    </mat-step>",
      "",
      "    <mat-step class=\"tp-stepper__step\" [stepControl]=\"stepControl2\">",
      "      <ng-template class=\"tp-stepper__step__label\" matStepLabel>",
      "        <!-- Step2 title -->",
      "      </ng-template>",
      "      <div class=\"tp-stepper__step__content\">",
      "        <!-- Step2 Content -->",
      "      </div>",
      "      <div class=\"tp-stepper__step__btns\">",
      "        <div class=\"tp-stepper__step__btns__left\">",
      "          <button mat-button matStepperPrevious>",
      "            <mat-icon svgIcon=\"icon:keyboard_arrow_left\"></mat-icon>BACK",
      "          </button>",
      "        </div>",
      "        <div class=\"gl-fill-remaining-space\"></div>",
      "        <div class=\"tp-stepper__step__btns__right\">",
      "          <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">",
      "            NEXT",
      "            <mat-icon svgIcon=\"icon:navigate_next\"></mat-icon>",
      "          </button>",
      "        </div>",
      "      </div>",
      "    </mat-step>",
      "",
      "    <mat-step class=\"tp-stepper__step\" [stepControl]=\"stepControl3\">",
      "      <ng-template class=\"tp-stepper__step__label\" matStepLabel>",
      "        <!-- Step3 Title -->",
      "      </ng-template>",
      "      <div class=\"tp-stepper__step__content\">",
      "        <!-- Step3 content -->",
      "      </div>",
      "      <div class=\"tp-stepper__step__btns\">",
      "        <div class=\"tp-stepper__step__btns__left\">",
      "          <button mat-button matStepperPrevious>",
      "            <mat-icon svgIcon=\"icon:keyboard_arrow_left\"></mat-icon>BACK",
      "          </button>",
      "        </div>",
      "        <div class=\"gl-fill-remaining-space\"></div>",
      "        <div class=\"tp-stepper__step__btns__right\">",
      "          <button mat-raised-button color=\"primary\">",
      "            SUBMIT",
      "          </button>",
      "        </div>",
      "      </div>",
      "    </mat-step>",
      "  </mat-horizontal-stepper>",
      "</form>",
      ""
    ],
    "description": "stepperHorizontal"
  },
  "tpExpansionPanel": {
    "prefix": "lyTpExpansionPanel",
    "body": [
      "<tp-expansion-panel",
      "  [panelTitle]=\"'Title1'\"",
      "  [isExpanse]=\"true\"",
      "  [isLastItem]=\"false\"",
      ">",
      "  <div tp-panel-content>",
      "    <!-- content 1 -->",
      "  </div>",
      "</tp-expansion-panel>",
      "<tp-expansion-panel",
      "  [panelTitle]=\"'Title2'\"",
      "  [isExpanse]=\"true\"",
      "  [isLastItem]=\"false\"",
      ">",
      "  <div tp-panel-content>",
      "    <!-- content 2 -->",
      "  </div>",
      "</tp-expansion-panel>",
      "<tp-expansion-panel",
      "  [panelTitle]=\"'Title2'\"",
      "  [isExpanse]=\"true\"",
      "  [isLastItem]=\"ture\"",
      ">",
      "  <div tp-panel-content>",
      "    <!-- content 3 -->",
      "  </div>",
      "</tp-expansion-panel>",
      ""
    ],
    "description": "tpExpansionPanel"
  }
}